
//import GUI.*;
//import GUI.EditAddAddressGUI;
//import GUI.EditAddDateGUI;
//import contactlist.ContactList;
//import contactlist.connector;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nadat
 */
public class EditContactGUI extends javax.swing.JFrame {
    int contactId;
    int selectedDaterow = -1;
    int selectedPhonerow = -1;
    int selectedAddressrow = -1;
    String selectedRow, dateId, dateType, date, addressId, addressType, address, city, state, zipcode, phoneId, phoneType, areaCode, number;
    /**
     * Creates new form editContactGUI
     */
    public EditContactGUI() {
        initComponents();
        
    }
    
    public EditContactGUI(int msg) {
        initComponents();
        this.contactId = msg;
        displayContact();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateTf = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dateTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        phoneTable = new javax.swing.JTable();
        deleteDateBtn = new javax.swing.JButton();
        editDateBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fnameTf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mnameTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lnameTf = new javax.swing.JTextField();
        editAddressBtn = new javax.swing.JButton();
        deleteAddressBtn = new javax.swing.JButton();
        deletePhoneBtn = new javax.swing.JButton();
        editPhoneBtn = new javax.swing.JButton();
        saveEditBtn = new javax.swing.JButton();
        editAddDateBtn = new javax.swing.JButton();
        editAddAddressBtn = new javax.swing.JButton();
        editAddPhoneBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EDIT CONTACT");

        dateTf.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        dateTf.setText("DATES");

        dateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date_Id", "Date Type", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dateTable.getTableHeader().setReorderingAllowed(false);
        dateTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dateTable);

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel5.setText("ADDRESSES");

        addressTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Address_Id", "Address Type", "Address", "City", "State", "Zipcode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addressTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addressTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(addressTable);

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel6.setText("PHONES");

        phoneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Phone_Id", "Phone Type", "Area Code", "Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        phoneTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(phoneTable);

        deleteDateBtn.setText("Delete Date");
        deleteDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDateBtnActionPerformed(evt);
            }
        });

        editDateBtn.setText("Edit  Date");
        editDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDateBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("First Name");

        jLabel2.setText("Middle Name");

        mnameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnameTfActionPerformed(evt);
            }
        });

        jLabel3.setText("Last Name");

        editAddressBtn.setText("Edit Address");
        editAddressBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAddressBtnActionPerformed(evt);
            }
        });

        deleteAddressBtn.setText("Delete Address");
        deleteAddressBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAddressBtnActionPerformed(evt);
            }
        });

        deletePhoneBtn.setText("Delete Phone");
        deletePhoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePhoneBtnActionPerformed(evt);
            }
        });

        editPhoneBtn.setText("Edit Phone");
        editPhoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPhoneBtnActionPerformed(evt);
            }
        });

        saveEditBtn.setText("Save Name");
        saveEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEditBtnActionPerformed(evt);
            }
        });

        editAddDateBtn.setText("Add Date");
        editAddDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAddDateBtnActionPerformed(evt);
            }
        });

        editAddAddressBtn.setText("Add Address");
        editAddAddressBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAddAddressBtnActionPerformed(evt);
            }
        });

        editAddPhoneBtn.setText("Add Phone");
        editAddPhoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAddPhoneBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deletePhoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editPhoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(4, 4, 4)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(dateTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(fnameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(mnameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(lnameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(156, 156, 156)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteAddressBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editAddressBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editDateBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteDateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editAddDateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editAddAddressBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(editAddPhoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(saveEditBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fnameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lnameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mnameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(saveEditBtn))
                .addGap(24, 24, 24)
                .addComponent(dateTf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editAddDateBtn)
                        .addGap(3, 3, 3)
                        .addComponent(editDateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteDateBtn)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editAddAddressBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editAddressBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteAddressBtn)))
                .addGap(31, 31, 31)
                .addComponent(jLabel6)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editAddPhoneBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editPhoneBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePhoneBtn)))
                .addGap(42, 42, 42)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnameTfActionPerformed

    private void dateTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateTableMouseClicked
        // TODO add your handling code here:
       
        selectedDaterow = dateTable.getSelectedRow();
        this.dateId = dateTable.getModel().getValueAt(selectedDaterow, 0).toString();
        this.dateType = dateTable.getModel().getValueAt(selectedDaterow, 1).toString();
        this.date = dateTable.getModel().getValueAt(selectedDaterow, 2).toString();
        
    }//GEN-LAST:event_dateTableMouseClicked

    private void editDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDateBtnActionPerformed
        // TODO add your handling code here:
        if(selectedDaterow == -1){
            JOptionPane.showMessageDialog(null, "Please select a date");
        }
        else{
            EditDateRowGUI editDateRow = new EditDateRowGUI(selectedDaterow, dateId,dateType,date);
            editDateRow.setVisible(true);
            editDateRow.pack();
            editDateRow.setLocationRelativeTo(null);
            editDateRow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_editDateBtnActionPerformed

    private void editAddressBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAddressBtnActionPerformed
        // TODO add your handling code here:
        if(selectedAddressrow == -1){
            JOptionPane.showMessageDialog(null, "Please select an address.");
        }
        else{
            EditAddressRowGUI editAddressRow = new EditAddressRowGUI(selectedAddressrow, addressId, addressType, address, city, state, zipcode);
            editAddressRow.setVisible(true);
            editAddressRow.pack();
            editAddressRow.setLocationRelativeTo(null);
            editAddressRow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_editAddressBtnActionPerformed

    private void editPhoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPhoneBtnActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        if(selectedPhonerow == -1){
            JOptionPane.showMessageDialog(null, "Please select a phone number");
        }
        else{
            EditPhoneRowGUI editPhoneRow = new EditPhoneRowGUI(selectedPhonerow, phoneId, phoneType, areaCode, number);
            editPhoneRow.setVisible(true);
            editPhoneRow.pack();
            editPhoneRow.setLocationRelativeTo(null);
            editPhoneRow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
        
    }//GEN-LAST:event_editPhoneBtnActionPerformed

    private void addressTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressTableMouseClicked
        // TODO add your handling code here:
        selectedAddressrow = addressTable.getSelectedRow();
        this.addressId = addressTable.getModel().getValueAt(selectedAddressrow, 0).toString();
        this.addressType = addressTable.getModel().getValueAt(selectedAddressrow, 1).toString();
        this.address = addressTable.getModel().getValueAt(selectedAddressrow, 2).toString();
        this.city = addressTable.getModel().getValueAt(selectedAddressrow, 3).toString();
        this.state = addressTable.getModel().getValueAt(selectedAddressrow, 4).toString();
        this.zipcode = addressTable.getModel().getValueAt(selectedAddressrow, 5).toString();
    }//GEN-LAST:event_addressTableMouseClicked

    private void deleteAddressBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAddressBtnActionPerformed
        // TODO add your handling code here:
        if(selectedAddressrow == -1){
            JOptionPane.showMessageDialog(null, "Please select an address");
        }
        else{
            ContactList list = new ContactList();
            list.deleteRow(Integer.parseInt(this.addressId), "address");
            DefaultTableModel tm = (DefaultTableModel)addressTable.getModel();
            tm.removeRow(selectedAddressrow);
        }
        
    }//GEN-LAST:event_deleteAddressBtnActionPerformed

    private void deleteDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDateBtnActionPerformed
        // TODO add your handling code here:
        if(selectedDaterow == -1){
            JOptionPane.showMessageDialog(null, "Please select a date");
        }
        else{
            ContactList list = new ContactList();
            list.deleteRow(Integer.parseInt(this.dateId), "date");
            DefaultTableModel tm = (DefaultTableModel)dateTable.getModel();
            tm.removeRow(selectedDaterow);
        }
    }//GEN-LAST:event_deleteDateBtnActionPerformed

    private void phoneTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneTableMouseClicked
        // TODO add your handling code here:
        selectedPhonerow = phoneTable.getSelectedRow();
        this.phoneId = phoneTable.getModel().getValueAt(selectedPhonerow, 0).toString();
        this.phoneType = phoneTable.getModel().getValueAt(selectedPhonerow, 1).toString();
        this.areaCode = phoneTable.getModel().getValueAt(selectedPhonerow, 2).toString();
        this.number = phoneTable.getModel().getValueAt(selectedPhonerow, 3).toString();
    }//GEN-LAST:event_phoneTableMouseClicked

    private void deletePhoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePhoneBtnActionPerformed
        // TODO add your handling code here:
        if(selectedPhonerow == -1){
            JOptionPane.showMessageDialog(null, "Please select a phone");
        }
        else{
            ContactList list = new ContactList();
            list.deleteRow(Integer.parseInt(this.phoneId), "phone");
            DefaultTableModel tm = (DefaultTableModel)phoneTable.getModel();
            tm.removeRow(selectedPhonerow);
        }
        
        
    }//GEN-LAST:event_deletePhoneBtnActionPerformed

    private void saveEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEditBtnActionPerformed
        // TODO add your handling code here:
        String fname = fnameTf.getText();
        String mname = mnameTf.getText();
        String lname = lnameTf.getText();
        
       
        ContactList list = new ContactList();
        list.updateName(this.contactId, fname, mname, lname);
        
        ContactListGUI.displayContacts();
        
        
        
    }//GEN-LAST:event_saveEditBtnActionPerformed

    private void editAddDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAddDateBtnActionPerformed
        // TODO add your handling code here:
        
        EditAddDateGUI editAddDate = new EditAddDateGUI(this.contactId);
        editAddDate.setVisible(true);
        editAddDate.pack();
        editAddDate.setLocationRelativeTo(null);
        editAddDate.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_editAddDateBtnActionPerformed

    private void editAddAddressBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAddAddressBtnActionPerformed
        // TODO add your handling code here:
        EditAddAddressGUI editAddAddress = new EditAddAddressGUI(this.contactId);
        editAddAddress.setVisible(true);
        editAddAddress.pack();
        editAddAddress.setLocationRelativeTo(null);
        editAddAddress.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_editAddAddressBtnActionPerformed

    private void editAddPhoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAddPhoneBtnActionPerformed
        // TODO add your handling code here:
        EditAddPhoneGUI editAddPhone = new EditAddPhoneGUI(this.contactId);
        editAddPhone.setVisible(true);
        editAddPhone.pack();
        editAddPhone.setLocationRelativeTo(null);
        editAddPhone.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_editAddPhoneBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
   
    public static  void editAddDateRow(String varDateId, String varDateType, String varDate){
        DefaultTableModel tm = (DefaultTableModel)dateTable.getModel();
        
        Object[] row = new Object[3];
        row[0] = varDateId;
        row[1] = varDateType;
        row[2] = varDate;
        
        tm.addRow(row);
    }
    
    public static  void editDateRow(int varRowId, String varDateId, String varDateType, String varDate){
        DefaultTableModel tm = (DefaultTableModel)dateTable.getModel();
        
        tm.setValueAt(varDateId, varRowId, 0);
        tm.setValueAt(varDateType, varRowId, 1);
        tm.setValueAt(varDate, varRowId, 2);
        
        
            
    }
    
    public static  void editAddAddress(String varAddressId, String varAddressType, String varAddress, String varCity, String varState, String varZipcode){
        
        DefaultTableModel tm = (DefaultTableModel)addressTable.getModel();
        
        Object[] row = new Object[6];
        row[0] = varAddressId;
        row[1] = varAddressType;
        row[2] = varAddress;
        row[3] = varCity;
        row[4] = varState;
        row[5] = varZipcode;
        
        tm.addRow(row);
    }
    public static  void editAddressRow(int varRowId, String varAddressId, String varAddressType, String varAddress,String varCity, String varState, String varZipcode){
        DefaultTableModel tm = (DefaultTableModel)addressTable.getModel();
        
        tm.setValueAt(varAddressId, varRowId, 0);
        tm.setValueAt(varAddressType, varRowId, 1);
        tm.setValueAt(varAddress, varRowId, 2);
        tm.setValueAt(varCity, varRowId, 3);
        tm.setValueAt(varState, varRowId, 4);
        tm.setValueAt(varZipcode, varRowId, 5);
    }
     
   
    public  static void editAddPhone(String varPhoneId, String varPhoneType, String varAreaCode, String varNumber){
        DefaultTableModel tm = (DefaultTableModel)phoneTable.getModel();
        
        Object[] row = new Object[4];
        row[0] = varPhoneId;
        row[1] = varPhoneType;
        row[2] = varAreaCode;
        row[3] = varNumber;
        
        tm.addRow(row);
    }
    public  static void editPhoneRow(int varRowId,String varPhoneId, String varPhoneType, String varAreaCode, String varNumber){
        DefaultTableModel tm = (DefaultTableModel)phoneTable.getModel();
       
        tm.setValueAt(varPhoneId, varRowId, 0);
        tm.setValueAt(varPhoneType, varRowId, 1);
        tm.setValueAt(varAreaCode, varRowId, 2);
        tm.setValueAt(varNumber, varRowId, 3);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditContactGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditContactGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditContactGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditContactGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditContactGUI().setVisible(true);
            }
        });
    }
    
    private void displayContact() {                                         
        // TODO add your handling code here:
            
        try
        {
            Connection con = connector.get();
            
            //Display contact table details
            String sqlContact = "select * from contact where Contact_Id ='"+this.contactId+"'";
            PreparedStatement psContact = con.prepareStatement(sqlContact);
            ResultSet rsContact = psContact.executeQuery();
            
            
            while(rsContact.next())
            {   
                fnameTf.setText(rsContact.getString("Fname"));
                mnameTf.setText(rsContact.getString("Mname"));
                lnameTf.setText(rsContact.getString("Lname"));
                
            }   
            
            
            //Display date table
            DefaultTableModel tm = (DefaultTableModel)dateTable.getModel();
            //tm.setRowCount(0);
            
            String sqlDate = "select * from date where Contact_id = '"+this.contactId+"'";
            PreparedStatement psDate = con.prepareStatement(sqlDate);
            ResultSet rsDate = psDate.executeQuery();
                
            while(rsDate.next())
            {
                Object[] row = new Object[3];
                row[0] = rsDate.getString("Date_id");
                row[1] = rsDate.getString("Date_type");
                row[2] = rsDate.getString("Date");
                tm.addRow(row);
            }
            
            //Display address table
            tm = (DefaultTableModel)addressTable.getModel();
            //tm.setRowCount(0);
            
            String sqlAddress = "select * from address where Contact_id = '"+this.contactId+"'";
            PreparedStatement psAddress = con.prepareStatement(sqlAddress);
            ResultSet rsAddress = psAddress.executeQuery();
                
            while(rsAddress.next())
            {
                Object[] row = new Object[6];
                row[0] = rsAddress.getString("Address_id");
                row[1] = rsAddress.getString("Address_type");
                row[2] = rsAddress.getString("Address");
                row[3] = rsAddress.getString("City");
                row[4] = rsAddress.getString("State");
                row[5] = rsAddress.getString("Zip");
                tm.addRow(row);
            }
            
            
            
            //Display phone table
            tm = (DefaultTableModel)phoneTable.getModel();
            //tm.setRowCount(0);
            
            String sqlPhone = "select * from phone where Contact_id = '"+this.contactId+"'";
            PreparedStatement psPhone = con.prepareStatement(sqlPhone);
            ResultSet rsPhone = psPhone.executeQuery();
                
            while(rsPhone.next())
            {
                Object[] row = new Object[4];
                row[0] = rsPhone.getString("Phone_id");
                row[1] = rsPhone.getString("Phone_type");
                row[2] = rsPhone.getString("Area_code");
                row[3] = rsPhone.getString("Number");
                tm.addRow(row);
            }
            
            
        }
        catch(Exception e)
        {
           e.printStackTrace();
            JOptionPane.showMessageDialog(this, e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable addressTable;
    private static javax.swing.JTable dateTable;
    private javax.swing.JLabel dateTf;
    private javax.swing.JButton deleteAddressBtn;
    private javax.swing.JButton deleteDateBtn;
    private javax.swing.JButton deletePhoneBtn;
    private javax.swing.JButton editAddAddressBtn;
    private javax.swing.JButton editAddDateBtn;
    private javax.swing.JButton editAddPhoneBtn;
    private javax.swing.JButton editAddressBtn;
    private javax.swing.JButton editDateBtn;
    private javax.swing.JButton editPhoneBtn;
    private javax.swing.JTextField fnameTf;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lnameTf;
    private javax.swing.JTextField mnameTf;
    private static javax.swing.JTable phoneTable;
    private javax.swing.JButton saveEditBtn;
    // End of variables declaration//GEN-END:variables
}
